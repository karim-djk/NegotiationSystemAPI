// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NegotiationSystemAPI.Data;

#nullable disable

namespace NegotiationSystemAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250118161016_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ItemParty", b =>
                {
                    b.Property<int>("ItemsItemId")
                        .HasColumnType("int");

                    b.Property<int>("PartiesPartyId")
                        .HasColumnType("int");

                    b.HasKey("ItemsItemId", "PartiesPartyId");

                    b.HasIndex("PartiesPartyId");

                    b.ToTable("ItemParty");
                });

            modelBuilder.Entity("NegotiationSystemAPI.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ItemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("NegotiationSystemAPI.Models.Party", b =>
                {
                    b.Property<int>("PartyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartyId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PartyId");

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("NegotiationSystemAPI.Models.PaymentRatio", b =>
                {
                    b.Property<int>("PaymentRatioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentRatioId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PartyId")
                        .HasColumnType("int");

                    b.Property<int>("ProposalId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("StatusedBy")
                        .HasColumnType("int");

                    b.HasKey("PaymentRatioId");

                    b.HasIndex("PartyId");

                    b.HasIndex("ProposalId");

                    b.HasIndex("StatusedBy");

                    b.ToTable("PaymentRatios");
                });

            modelBuilder.Entity("NegotiationSystemAPI.Models.Proposal", b =>
                {
                    b.Property<int>("ProposalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProposalId"), 1L, 1);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InitialProposalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCounterProposal")
                        .HasColumnType("bit");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProposalId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("InitialProposalId");

                    b.HasIndex("ItemId");

                    b.ToTable("Proposals");
                });

            modelBuilder.Entity("NegotiationSystemAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartyId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("PartyId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ItemParty", b =>
                {
                    b.HasOne("NegotiationSystemAPI.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemsItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NegotiationSystemAPI.Models.Party", null)
                        .WithMany()
                        .HasForeignKey("PartiesPartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NegotiationSystemAPI.Models.PaymentRatio", b =>
                {
                    b.HasOne("NegotiationSystemAPI.Models.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NegotiationSystemAPI.Models.Proposal", "Proposal")
                        .WithMany("PaymentRatios")
                        .HasForeignKey("ProposalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NegotiationSystemAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("StatusedBy");

                    b.Navigation("Party");

                    b.Navigation("Proposal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NegotiationSystemAPI.Models.Proposal", b =>
                {
                    b.HasOne("NegotiationSystemAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NegotiationSystemAPI.Models.Proposal", "InitialProposal")
                        .WithMany()
                        .HasForeignKey("InitialProposalId");

                    b.HasOne("NegotiationSystemAPI.Models.Item", "Item")
                        .WithMany("Proposals")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InitialProposal");

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NegotiationSystemAPI.Models.User", b =>
                {
                    b.HasOne("NegotiationSystemAPI.Models.Party", "Party")
                        .WithMany("Users")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("NegotiationSystemAPI.Models.Item", b =>
                {
                    b.Navigation("Proposals");
                });

            modelBuilder.Entity("NegotiationSystemAPI.Models.Party", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("NegotiationSystemAPI.Models.Proposal", b =>
                {
                    b.Navigation("PaymentRatios");
                });
#pragma warning restore 612, 618
        }
    }
}
